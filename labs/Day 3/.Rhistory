library(MASS) # step
library(tidyverse)
library(readxl)
library(corrplot)
library(car)  # For VIF calculation
library(GGally)
library(visdat)
library(naniar)
read_csv(data_no_outliers, file = "processed_data/data_no_outliers.csv")
data <- read.csv(data_no_outliers, file = "processed_data/data_no_outliers.csv")
data <- read.csv(data_no_outliers, file = "processed_data/data_no_outliers.csv")
data <- read.csv(file = "processed_data/data_no_outliers.csv")
data_to_model <- readRDS(file = "processed_data/data_to_model.rds")
summary(data_to_model)
library(tidyverse)
data_to_model |>
select(
DIED, # Y, outcome, target, what we want to predict
# Predictors
# We will use all days since admission,
AGE:ZSN_A,
NR_ABNORMAL:ZAB_LEG_ABNORMAL,
O_L_POST:GIPO_K,
GIPER_NA,
TIME_B_S:P_IM_STEN,
ends_with("_scaled")
) -> data_to_model_death
# Set seed for reproducibility
set.seed(123)
# Split data into training and test sets
library(caret)
train_index <- createDataPartition(data_to_model_death$DIED, p = 0.7, list = FALSE)
training_data <- data_to_model_death[train_index, ]
testing_data <- data_to_model_death[-train_index, ]
logistic_model_full <- glm(
formula = DIED ~ .,
data = data_to_model_death,
family = binomial
)
library(MASS) # step
library(tidyverse)
library(readxl)
library(corrplot)
library(car)  # For VIF calculation
library(GGally)
library(visdat)
library(naniar)
data_to_model <- readRDS(file = "processed_data/data_to_model.rds")
summary(data_to_model)
data_to_model <- readRDS(file = "processed_data/data_to_model.rds")
summary(data_to_model)
data_to_model |>
select(
DIED, # Y, outcome, target, what we want to predict
# Predictors
# We will use all days since admission,
AGE:ZSN_A,
NR_ABNORMAL:FIBR_TER_ABNORMAL,
O_L_POST:IM_PG_P,
GIPO_K,
GIPER_NA,
TIME_B_S:P_IM_STEN,
ends_with("_scaled")
) -> data_to_model_death
data_to_model |>
dplyr::select(
DIED, # Y, outcome, target, what we want to predict
# Predictors
# We will use all days since admission,
AGE:ZSN_A,
NR_ABNORMAL:FIBR_TER_ABNORMAL,
O_L_POST:IM_PG_P,
GIPO_K,
GIPER_NA,
TIME_B_S:P_IM_STEN,
ends_with("_scaled")
) -> data_to_model_death
data_to_model <- readRDS(file = "processed_data/data_to_model.rds")
summary(data_to_model)
data_to_model |>
dplyr::select(
DIED, # Y, outcome, target, what we want to predict
# Predictors
# We will use all days since admission,
AGE:ZSN_A,
NR_ABNORMAL:FIBR_TER_ABNORMAL,
O_L_POST:IM_PG_P,
GIPO_K,
GIPER_NA,
TIME_B_S:P_IM_STEN,
ends_with("_scaled")
) -> data_to_model_death
data_to_model <- readRDS(file = "processed_data/data_to_model.rds")
summary(data_to_model)
data_to_model |>
select(
DIED, # Y, outcome, target, what we want to predict
# Predictors
# We will use all days since admission,
AGE:ZSN_A,
NR_ABNORMAL:FIBR_TER_ABNORMAL,
O_L_POST:IM_PG_P,
GIPO_K,
GIPER_NA,
TIME_B_S:P_IM_STEN,
ends_with("_scaled")
) -> data_to_model_death
library(tidyverse)
data_to_model |>
select(
DIED, # Y, outcome, target, what we want to predict
# Predictors
# We will use all days since admission,
AGE:ZSN_A,
NR_ABNORMAL:FIBR_TER_ABNORMAL,
O_L_POST:IM_PG_P,
GIPO_K,
GIPER_NA,
TIME_B_S:P_IM_STEN,
ends_with("_scaled")
) -> data_to_model_death
